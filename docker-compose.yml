services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
    ports:
      - "2181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.0.1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    # depends_on:
    #   - email
    #   - sms
    #   - api
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3002:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin

  # api:
  #   build:
  #     context: .
  #     dockerfile: deployments/Dockerfile.api
  #   ports:
  #     - "8080:8080"
  #   env_file:
  #     - ".env"
  #   depends_on:
  #     - kafka
  # email:
  #   build:
  #     context: .
  #     dockerfile: deployments/Dockerfile.email
  #   ports:
  #     - "3001:3001"
  #   environment:
  #     - KAFKA_BROKER=kafka:9092
  #   env_file:
  #     - ".env"
  #   depends_on:
  #     - kafka
  # sms:
  #   build:
  #     context: .
  #     dockerfile: deployments/Dockerfile.sms
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - KAFKA_BROKER=kafka:9092
  #   env_file:
  #     - ".env"
  #   depends_on:
  #     - kafka

  tenant-db:
    image: postgres:15
    container_name: tenant-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: signal_bus
      POSTGRES_DB: tenant
    volumes:
      - tenant-data:/var/lib/postgresql/data
    restart: unless-stopped

  template-db:
    image: postgres:15
    container_name: template-db
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: signal_bus
      POSTGRES_DB: template
    volumes:
      - template-data:/var/lib/postgresql/data
    restart: unless-stopped

  notification-db:
    image: postgres:15
    container_name: notification-db
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: signal_bus
      POSTGRES_DB: notification
    volumes:
      - notification-data:/var/lib/postgresql/data
    restart: unless-stopped


  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"   
      - "55681:55681"

  jaeger:
    image: jaegertracing/all-in-one:1.56
    ports:
      - "16686:16686"
      - "4317:4317"  
      - "4318:4318"  
 



volumes:
  grafana-storage:
  tenant-data:
  template-data:
  notification-data:
